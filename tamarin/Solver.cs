using System;
using System.Collections.Generic;
using System.Text;

class Tamarin
{
	static void Main()
	{
		// call flag solver
		Modified_Func4();
	}

	// original equations_arr
	static uint[,] equations_arr = new uint[22, 32]
	{
	{
		2921822136u,
		1060277104u,
		2035740900u,
		823622198u,
		210968592u,
		3474619224u,
		3252966626u,
		1671622480u,
		1174723606u,
		3830387194u,
		2514889364u,
		3125636774u,
		896423784u,
		4164953836u,
		2838119626u,
		2523117444u,
		1385864710u,
		3157438448u,
		132542958u,
		4108218268u,
		314662132u,
		432653936u,
		1147047258u,
		1802950730u,
		67411056u,
		1207641174u,
		1920298940u,
		2947533900u,
		3468512014u,
		3485949926u,
		3695085832u,
		3903653528u
	},
	{
		463101660u,
		3469888460u,
		2006842986u,
		144738028u,
		630007230u,
		3440652086u,
		2322916652u,
		2227002010u,
		1163469256u,
		23859328u,
		2322597530u,
		3716255122u,
		2876706098u,
		713374856u,
		2345958624u,
		3496771192u,
		1773957550u,
		146382778u,
		1141367704u,
		1061893394u,
		994321632u,
		3407332344u,
		2240786438u,
		2218631702u,
		2906647610u,
		1919308420u,
		2136654012u,
		164975906u,
		2834189362u,
		3118478912u,
		3258673870u,
		3211411825u
	},
	{
		2558729100u,
		1170420958u,
		2355877954u,
		3593652986u,
		2587766164u,
		2271696650u,
		1560549496u,
		132089692u,
		2893757564u,
		3469624876u,
		10109206u,
		2948199026u,
		4170042296u,
		2717317064u,
		4210960804u,
		93756380u,
		2006217436u,
		2988057920u,
		2251383150u,
		226355976u,
		579516546u,
		3915017586u,
		1273838010u,
		2852178952u,
		4272774672u,
		1006507228u,
		3595131622u,
		1880597220u,
		1230996622u,
		2542910224u,
		917668128u,
		1612363977u
	},
	{
		3637139654u,
		2593663532u,
		649194106u,
		4275630476u,
		2730487128u,
		905133820u,
		2868808700u,
		1284610026u,
		1051455306u,
		272375560u,
		1219428572u,
		163965224u,
		3899483864u,
		309833108u,
		1862243284u,
		1919038730u,
		3414916994u,
		3134382762u,
		2018925234u,
		3467081876u,
		4045123308u,
		4244105094u,
		4205568254u,
		1793827648u,
		257732384u,
		2092183712u,
		3517540150u,
		2641565070u,
		2181538960u,
		2670634300u,
		2070334778u,
		1995308868u
	},
	{
		561434200u,
		2730097174u,
		1499965472u,
		760244614u,
		1588114416u,
		521516362u,
		2963707630u,
		1896166800u,
		411250470u,
		1601999958u,
		2973942456u,
		3027806424u,
		1238337602u,
		1380721280u,
		122976200u,
		788897864u,
		3589391734u,
		1987301254u,
		1085198712u,
		3553616586u,
		1994354546u,
		1684916442u,
		2788234788u,
		2641884090u,
		612801768u,
		1801824798u,
		2019943314u,
		3304068906u,
		849354132u,
		44941780u,
		3473262708u,
		1444837808u
	},
	{
		921974086u,
		404262832u,
		1353817916u,
		764855648u,
		2290476820u,
		2023815980u,
		669786172u,
		791841140u,
		526348842u,
		2979022342u,
		3656325786u,
		1276970440u,
		2424614726u,
		1190814714u,
		2804417116u,
		3654263826u,
		3068580996u,
		1908493640u,
		3101330462u,
		792198672u,
		1772484794u,
		4050408722u,
		611660842u,
		1610808360u,
		431629552u,
		2319897718u,
		3255085210u,
		1426503472u,
		1630566802u,
		4241881448u,
		1606014350u,
		636517450u
	},
	{
		2906103140u,
		1116553354u,
		2279536366u,
		3011561210u,
		2641603848u,
		1646150780u,
		192124694u,
		611421916u,
		3416039786u,
		4208848404u,
		474397384u,
		1491088256u,
		3177553844u,
		2042765300u,
		1653674858u,
		1365840538u,
		1595225706u,
		2705938552u,
		3180386458u,
		1723055560u,
		2280421090u,
		1241156010u,
		3807390206u,
		2595800854u,
		2890507242u,
		4068903400u,
		3923234634u,
		2613933834u,
		3927909200u,
		2149793556u,
		3589302752u,
		802516900u
	},
	{
		171242408u,
		1411016272u,
		2890085382u,
		624162464u,
		3117870816u,
		3388454296u,
		3869111620u,
		948964384u,
		1670102044u,
		3432346180u,
		1670460686u,
		3674313702u,
		4108083090u,
		915550832u,
		4249135230u,
		411447682u,
		2915987712u,
		3865207952u,
		4017666788u,
		275767786u,
		2506858524u,
		3488718446u,
		1995975410u,
		566166116u,
		1590333384u,
		329205954u,
		3913164274u,
		620615436u,
		1464604756u,
		269837028u,
		963851056u,
		2483789524u
	},
	{
		4043184956u,
		3569779124u,
		3817645374u,
		4281618348u,
		4144074366u,
		3776223584u,
		2260112022u,
		2417238210u,
		4004384546u,
		1196429850u,
		1429697170u,
		3075499898u,
		2507660230u,
		1342925724u,
		3951341456u,
		229184726u,
		2762396986u,
		1612961426u,
		986238002u,
		1228690306u,
		3948701236u,
		1378190546u,
		3106898794u,
		1894874158u,
		1488049036u,
		3718233910u,
		1078939754u,
		2355898312u,
		2030934192u,
		2879370894u,
		3017715248u,
		1647621107u
	},
	{
		3849716376u,
		3412391848u,
		420800182u,
		156925722u,
		3602232204u,
		2645326622u,
		3864083570u,
		1279782822u,
		878821008u,
		1906288878u,
		1396282244u,
		1641728726u,
		2295751090u,
		290937256u,
		1958396986u,
		2115100470u,
		3706945590u,
		2885002942u,
		1935777480u,
		1483762940u,
		3589264430u,
		3791465274u,
		2553819596u,
		2050180502u,
		1381704584u,
		4640270u,
		628970046u,
		774725214u,
		2575508070u,
		1330692832u,
		1250987676u,
		3756982724u
	},
	{
		1460953346u,
		1175847424u,
		3477700838u,
		3783709768u,
		1064663570u,
		3559971784u,
		3802954664u,
		2431960456u,
		2198986400u,
		859802318u,
		3783810034u,
		1110187920u,
		4244034440u,
		1796543058u,
		902449590u,
		160031782u,
		3639253664u,
		4255746326u,
		3339514496u,
		218988706u,
		4085181614u,
		2342973726u,
		1391523108u,
		1120970708u,
		2639842372u,
		156321138u,
		1587974922u,
		3686627774u,
		1648124740u,
		2095688044u,
		293533614u,
		3056924137u
	},
	{
		1034259104u,
		4077045412u,
		789979418u,
		961028604u,
		2185949320u,
		3457364068u,
		3532291848u,
		2206594748u,
		3072062072u,
		1796530288u,
		1402389280u,
		3478769990u,
		196567236u,
		3940435298u,
		2237679842u,
		668941406u,
		170819894u,
		1102049112u,
		131349762u,
		2512464482u,
		4159048294u,
		2186098090u,
		123947608u,
		1742064290u,
		1711289746u,
		1449132362u,
		58078952u,
		2976574968u,
		1774398264u,
		1532589156u,
		4089484268u,
		4041979478u
	},
	{
		3681899832u,
		4208608358u,
		1951338724u,
		3772673566u,
		3160075610u,
		1422174080u,
		2431526454u,
		529884656u,
		2722748162u,
		236192616u,
		2684139926u,
		697549902u,
		3546454434u,
		1921398338u,
		1310272304u,
		1691292498u,
		4134700116u,
		720619430u,
		2592536546u,
		2188997288u,
		2461521148u,
		455077540u,
		1421274126u,
		1052585740u,
		2383754190u,
		1567602170u,
		3773864138u,
		4036579298u,
		2416620860u,
		1931099884u,
		2051263696u,
		310763286u
	},
	{
		1461705722u,
		968835462u,
		2563821358u,
		576185928u,
		1613137824u,
		940353300u,
		652295412u,
		1135005196u,
		3607866196u,
		3307698550u,
		3916080186u,
		4052934590u,
		3991167852u,
		3799175976u,
		3393348946u,
		950814766u,
		2174463160u,
		2422320256u,
		959545514u,
		2820210140u,
		4284041840u,
		3082466322u,
		1257510060u,
		2676710840u,
		127465314u,
		3887977956u,
		3218198116u,
		957094088u,
		1409365960u,
		2217798938u,
		277108032u,
		2579736592u
	},
	{
		3776055232u,
		823459706u,
		1913270776u,
		1721511850u,
		633354432u,
		3901765934u,
		2089017122u,
		1103648570u,
		3791238880u,
		1686042442u,
		1567720048u,
		2924815412u,
		1695861754u,
		3641036796u,
		1208391908u,
		1593134050u,
		1674288590u,
		2322785248u,
		2472109738u,
		3572933674u,
		3828029068u,
		1641647380u,
		4116180236u,
		3884220004u,
		3146594508u,
		3587030908u,
		3451856524u,
		2965945264u,
		162291656u,
		2061732942u,
		1551591510u,
		4014200221u
	},
	{
		3406794856u,
		3181753846u,
		2984888850u,
		1748566984u,
		1311737108u,
		3415409722u,
		2398926736u,
		2006269026u,
		3117725174u,
		2901254050u,
		2733703362u,
		1595001962u,
		106879068u,
		3933136528u,
		245096038u,
		666024082u,
		134803296u,
		1657783988u,
		3429228290u,
		2120419114u,
		2879013028u,
		9653606u,
		305704628u,
		3793128986u,
		369835124u,
		2274924880u,
		4233339440u,
		2224753480u,
		2427854922u,
		1808326540u,
		1833703938u,
		2391461119u
	},
	{
		1827597388u,
		454565514u,
		1282880792u,
		561174442u,
		3610484436u,
		2327669348u,
		765794442u,
		3705161518u,
		1715916192u,
		292859360u,
		183730846u,
		3298097994u,
		3535037218u,
		2904849282u,
		348832662u,
		1856773750u,
		3618335118u,
		3017093112u,
		3354956190u,
		3208811970u,
		897522204u,
		2835584374u,
		3097985334u,
		2108903166u,
		3230714490u,
		2597789348u,
		1597521406u,
		1663858876u,
		94923994u,
		883872856u,
		3230397040u,
		3420763893u
	},
	{
		4065160224u,
		2129787468u,
		3456903512u,
		2860656238u,
		2663588170u,
		3224900102u,
		2827778318u,
		2685874320u,
		2005737334u,
		586304716u,
		472376412u,
		2938324550u,
		3459137716u,
		3422216092u,
		3082124658u,
		1173945064u,
		842495374u,
		2564495050u,
		357433170u,
		2050324102u,
		1138367532u,
		854845936u,
		3054001576u,
		2465772674u,
		2305389082u,
		3669610606u,
		3527889292u,
		3817664802u,
		4238531160u,
		1556372762u,
		777986002u,
		1126454981u
	},
	{
		764733144u,
		3965849612u,
		1668893328u,
		2104626056u,
		1653642872u,
		2883395356u,
		3015268318u,
		2322404760u,
		1185726976u,
		1607036694u,
		3064704530u,
		3639372768u,
		1252489394u,
		3950622630u,
		3889240956u,
		233990458u,
		2393973872u,
		3609439896u,
		2108036182u,
		152726882u,
		3730671578u,
		3038534682u,
		3388044150u,
		3128791454u,
		2499312664u,
		3396894570u,
		2872225186u,
		3048419004u,
		2864782986u,
		3169897264u,
		2890258816u,
		753842003u
	},
	{
		2403595118u,
		2093259638u,
		2763900156u,
		3772789760u,
		3282639530u,
		2884294140u,
		3879894514u,
		2512089226u,
		318451120u,
		2464691316u,
		2179668204u,
		795049786u,
		326585310u,
		1313213364u,
		3437852224u,
		4055872768u,
		1224395344u,
		1911910472u,
		983774674u,
		3804144712u,
		3208317764u,
		1534290234u,
		3243577720u,
		617743358u,
		378252266u,
		3612369740u,
		1924240610u,
		961715850u,
		2058485164u,
		1460892148u,
		2613095898u,
		73199927u
	},
	{
		3093631524u,
		2704600210u,
		3519611266u,
		5414320u,
		3358912704u,
		2462642760u,
		3764896542u,
		1253645320u,
		4034052234u,
		3137650284u,
		4083324920u,
		2667059126u,
		436316958u,
		497182460u,
		404768030u,
		1122443700u,
		432434942u,
		443290780u,
		3487257114u,
		2699955512u,
		4250049274u,
		3991832458u,
		1037538700u,
		3125332984u,
		1533312690u,
		1452437348u,
		1283257518u,
		3946567854u,
		716640500u,
		2417637998u,
		3063327834u,
		82885668u
	},
	{
		1985108u,
		1694522756u,
		4205785758u,
		333118606u,
		2944637686u,
		2196892858u,
		4092971632u,
		83374602u,
		4049383084u,
		2980843496u,
		1801648602u,
		2639009750u,
		1944350566u,
		3046229260u,
		2662687100u,
		2423732014u,
		4179240348u,
		1035280058u,
		1015236846u,
		3488976898u,
		1530833166u,
		3723596058u,
		4125718292u,
		1095267878u,
		3635353922u,
		2932904358u,
		2764606674u,
		45921060u,
		3107074868u,
		4198045636u,
		1923836480u,
		366302822u
	}
	};

	// flag solver for Tamarin
	static bool Modified_Func4()
	{
		// fake flag to fill in first element of each list
		string fake_flag = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
		byte[] array = Encoding.ASCII.GetBytes(fake_flag);
		List<List<uint>> list = new List<List<uint>>();

		// create 22 lists, 33 elements each with list[j][0] == "AAAA".ToUInt32()
		for (int j = 0; j < equations_arr.GetLength(0); j++)
		{
			List<uint> list2 = new List<uint>();
			list2.Add(BitConverter.ToUInt32(array, j * 4));
			for (int k = 0; k < equations_arr.GetLength(1); k++)
			{
				list2.Add(equations_arr[j, k]);
			}
			list.Add(list2);
		}

		// solve
		Console.Write("TWCTF{");
		foreach (List<uint> sublist in list) {
			// four_chars_of_flag = list[n][32] - (list[n][31]*list[n][32]^31 + list[n][30]*list[n][32]^30 + ... + list[n][1]*list[n][32])
			uint flag_portion = sublist[sublist.Count - 1] - Modified_Func2(sublist, sublist[sublist.Count - 1], sublist.Count - 2);
			// convert integer back to ascii
			Console.Write(Encoding.Default.GetString(BitConverter.GetBytes(flag_portion)));
		}
		Console.Write("}" + Environment.NewLine);

		return true;
	}

	// (coefficients[31] * x^31) + (coefficients[30] * x^30) + (coefficients[29] * x^29) + ... (coefficients[1] * x)
	static uint Modified_Func2(List<uint> coefficients, uint x, int pos)
	{
		// only modification is to base case, ignore the last element of coefficents (this is what we're solving for)
		if (pos == 0)
		{
			return 0u;
		}
		uint num = coefficients[pos] * pow(x, pos);
		return num + Modified_Func2(coefficients, x, pos - 1);
	}

	// Raises x to the nth power: x^n
	static uint pow(uint x, int n)
	{
		uint num = 1u;
		for (int i = 0; i < n; i++)
		{
			num *= x;
		}
		return num;
	}
}